{"ast":null,"code":"var _jsxFileName = \"/Users/eddiediaz/repos/Redux/client/src/components/Cart/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth'; // Replace global context with react-redux methods\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx'); //selector to read data from state\n\nconst selectCart = state => state.cart;\n\nconst Cart = () => {\n  _s();\n\n  //useSelector hook\n  const cart = useSelector(selectCart);\n  const dispatch = useDispatch();\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  useEffect(() => {\n    if (data) {\n      stripePromise.then(res => {\n        res.redirectToCheckout({\n          sessionId: data.checkout.session\n        });\n      });\n    }\n  }, [data]);\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    if (!cart.length) {\n      getCart();\n    }\n  }, [cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({\n      type: TOGGLE_CART\n    });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n  } //TODO: check cartOpen\n\n\n  if (!cartOpen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-closed\",\n      onClick: toggleCart,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"trash\",\n        children: \"\\uD83D\\uDED2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close\",\n      onClick: toggleCart,\n      children: \"[close]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), cart.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cart.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: item\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row space-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Total: $\", calculateTotal()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), Auth.loggedIn() ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitCheckout,\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"(log in to check out)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"shocked\",\n        children: \"\\uD83D\\uDE31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), \"You haven't added anything to your cart yet!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"NI5MlnbCnZCLWcMNrG0FMyX4r84=\", false, function () {\n  return [useSelector, useDispatch, useLazyQuery];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/eddiediaz/repos/Redux/client/src/components/Cart/index.js"],"names":["React","useEffect","loadStripe","useLazyQuery","QUERY_CHECKOUT","idbPromise","CartItem","Auth","useSelector","useDispatch","TOGGLE_CART","ADD_MULTIPLE_TO_CART","stripePromise","selectCart","state","cart","Cart","dispatch","getCheckout","data","then","res","redirectToCheckout","sessionId","checkout","session","getCart","type","products","length","toggleCart","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","submitCheckout","productIds","i","push","_id","variables","cartOpen","map","loggedIn"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\n\n// Replace global context with react-redux methods\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\n//selector to read data from state\nconst selectCart = state => state.cart;\n\nconst Cart = () => {\n  //useSelector hook\n  const cart = useSelector(selectCart);\n  const dispatch = useDispatch();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!cart.length) {\n      getCart();\n    }\n  }, [cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  //TODO: check cartOpen\n  if (!cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {cart.length ? (\n        <div>\n          {cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}