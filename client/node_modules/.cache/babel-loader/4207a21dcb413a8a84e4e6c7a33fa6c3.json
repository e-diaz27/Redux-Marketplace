{"ast":null,"code":"var _jsxFileName = \"/Users/eddiediaz/repos/Redux/client/src/components/CategoryMenu/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client'; // Replace global context with react-redux methods\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers'; // selector function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selectCategories = state => state.categories;\n\nfunction CategoryMenu() {\n  _s();\n\n  //useSelector hook\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryMenu, \"c6psJ8dgC6HEd9ta9gyGuhK/yzE=\", false, function () {\n  return [useSelector, useDispatch, useQuery];\n});\n\n_c = CategoryMenu;\nexport default CategoryMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"sources":["/Users/eddiediaz/repos/Redux/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","useSelector","useDispatch","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","selectCategories","state","categories","CategoryMenu","dispatch","loading","data","categoryData","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,iBADF,EAEEC,uBAFF,QAGO,qBAHP;AAIA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CAEA;;;;AACA,MAAMC,gBAAgB,GAAGC,KAAK,IAAIA,KAAK,CAACC,UAAxC;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB;AACA,QAAMD,UAAU,GAAGR,WAAW,CAACM,gBAAD,CAA9B;AACA,QAAMI,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCd,QAAQ,CAACK,gBAAD,CAAhD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,YAAJ,EAAkB;AAChBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEZ,iBADC;AAEPM,QAAAA,UAAU,EAAEK,YAAY,CAACL;AAFlB,OAAD,CAAR;AAIAK,MAAAA,YAAY,CAACL,UAAb,CAAwBO,OAAxB,CAAiCC,QAAD,IAAc;AAC5CX,QAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBW,QAAtB,CAAV;AACD,OAFD;AAGD,KARD,MAQO,IAAI,CAACL,OAAL,EAAc;AACnBN,MAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCY,IAAhC,CAAsCT,UAAD,IAAgB;AACnDE,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAEZ,iBADC;AAEPM,UAAAA,UAAU,EAAEA;AAFL,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAjBQ,EAiBN,CAACK,YAAD,EAAeF,OAAf,EAAwBD,QAAxB,CAjBM,CAAT;;AAmBA,QAAMQ,WAAW,GAAIC,EAAD,IAAQ;AAC1BT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX,uBADC;AAEPiB,MAAAA,eAAe,EAAED;AAFV,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGX,UAAU,CAACa,GAAX,CAAgBC,IAAD,iBACd;AAEE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX;AACD,OAJH;AAAA,gBAMGD,IAAI,CAACE;AANR,OACOF,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhDQd,Y;UAEYT,W,EACFC,W,EAEuBF,Q;;;KALjCU,Y;AAkDT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\n// Replace global context with react-redux methods\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\n// selector function\nconst selectCategories = state => state.categories;\n\nfunction CategoryMenu() {\n  //useSelector hook\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}